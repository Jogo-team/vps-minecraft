name: Update server

on:
  workflow_dispatch:
    inputs:
      recreate:
        description: Recreate world
        type: boolean
        default: false
      backup:
        description: Backup world
        type: boolean
        default: true
      restore:
        description: restore world from backup
        required: false
        type: string
  workflow_call:
    inputs:
      recreate:
        description: Recreate world
        type: boolean
        default: false
      backup:
        description: Backup world
        type: boolean
        default: true
      restore:
        description: restore world from backup
        required: false
        type: string

jobs:

  Update-server:
    runs-on: ubuntu-latest

    env:
      ANSIBLE_HOST_KEY_CHECKING: False
      ANSIBLE_CUSTOM_ARGS: -i hosts --private-key ./private-key -e "username=${{ secrets.VPS_USER }} ansible_user=${{ secrets.VPS_USER }}" -vv playbook.yml

    steps:
      - name: Checkout repository 
        uses: actions/checkout@v3

      - name: Setup server connection
        uses: ./.github/actions/action-setup-server
        with:
          minecraft-config: ${{ vars.MINECRAFT_CONFIG }}
          vps-hosts: ${{ secrets.HOSTS }}
          vps-private-key: ${{ secrets.PRIVATE_KEY }}
      
      - if: ${{ inputs.backup == true }}
        name: Backup server
        uses: ./.github/actions/action-backup-server
        with:
          ansible-custom-args: ${{ env.ANSIBLE_CUSTOM_ARGS }}
          vps-hostname: ${{ secrets.VPS_HOSTNAME }}
          vps-user: ${{ secrets.VPS_USER }}
      
      - if: ${{ inputs.recreate == true }}
        name: Stop
        run: ansible-playbook --tags="stop" ${{ env.ANSIBLE_CUSTOM_ARGS }}
        
      - if: ${{ inputs.recreate == true }}
        name: Reset
        run: ansible-playbook --tags="reset" ${{ env.ANSIBLE_CUSTOM_ARGS }}
      
      - if: ${{ inputs.restore != '' }}
        name: Restore
        uses: ./.github/actions/action-get-artifact-from-id
        with:
          artifact-id: ${{ inputs.restore }}
          output-dir: data/world
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup bot
        uses: ciiiii/toml-editor@1.0.0
        with:
          file: "config/simple-discord-bot.toml"
          key: "botConfig.botToken"
          value: ${{ secrets.BOT_TOKEN }}

      - name: Setup bot webhook
        uses: ciiiii/toml-editor@1.0.0
        with:
          file: "config/simple-discord-bot.toml"
          key: "webhooks.chatWebhook"
          value: ${{ secrets.BOT_WEBHOOK_URL }}

      - name: Setup
        run: ansible-playbook --tags="setup" ${{ env.ANSIBLE_CUSTOM_ARGS }}
      
      - name: Stop_service
        run: ansible-playbook --tags="stop_service" ${{ env.ANSIBLE_CUSTOM_ARGS }}
      
      - name: Start
        run: ansible-playbook --tags="start" ${{ env.ANSIBLE_CUSTOM_ARGS }}

      - name: Start_service
        run: ansible-playbook --tags="start_service" ${{ env.ANSIBLE_CUSTOM_ARGS }}
